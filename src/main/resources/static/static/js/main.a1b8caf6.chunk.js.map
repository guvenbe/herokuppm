{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","console","log","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","prototypes","PropTypes","func","isRequired","object","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a1b8caf6.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/project\", project);\n        history.push(\"/dashboard\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjects = () => async dispatch => {\n    const res = await axios.get(\"/api/project/all\");\n    dispatch({\n        type: GET_PROJECTS,\n        payload: res.data\n    });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/project/${id}`);\n        dispatch({\n            type: GET_PROJECT,\n            payload: res.data\n        });\n    } catch (error) {\n        history.push(\"/dashboard\");\n    }\n};\n\nexport const deleteProject = id => async dispatch => {\n    if (\n        window.confirm(\n            \"Are you sure? This will delete the project and all the data related to it\"\n        )\n    ) {\n        await axios.delete(`/api/project/${id}`)\n        dispatch({\n            type: DELETE_PROJECT,\n            payload: id\n        });\n    }\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for backlog actions\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {deleteProject} from \"../../actions/projectActions\"\n\nclass ProjectItem extends Component {\n\n    onDeleteClick  = id =>{\n        this.props.deleteProject(id)\n    };\n\n    render() {\n        const { project } = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>{project.projectName}</h3>\n                            <p>{project.description}</p>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`projectBoard/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                    </li>\n                                </Link>\n\n                                    <li\n                                        className=\"list-group-item delete\"\n                                        onClick={this.onDeleteClick.bind(\n                                            this,\n                                            project.projectIdentifier\n                                        )}\n                                    >\n                                        <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                    </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectItem.propTypes = {\n    deleteProject: PropTypes.func.isRequired\n}\n\nexport default connect(null, {deleteProject}) (ProjectItem);","import React from \"react\";\nimport {Link} from \"react-router-dom\"\n\nconst CreateProjectButton = () => {\n  return (\n      <React.Fragment>\n      <Link to=\"/addProject\"  className=\"btn btn-lg btn-info\">\n          Create a Project\n      </Link>\n      </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n    componentDidMount() {\n        this.props.getProjects();\n    }\n\n    render() {\n        const { projects } = this.props.project;\n\n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Projects</h1>\n                            <br />\n                            <CreateProjectButton />\n\n                            <br />\n                            <hr />\n                            {projects.map(project => (\n                                <ProjectItem key={project.id} project={project} />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project: state.project\n});\n\nexport default connect(\n    mapStateToProps,\n    { getProjects }\n)(Dashboard);","import axios from \"axios\";\n\nconst setJWTToken = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/users/register\", newUser);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const login = LoginRequest => async dispatch => {\n    try {\n        // post => Login Request\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\n        // extract token from res.data\n        const { token } = res.data;\n        // store the token in the localStorage\n        localStorage.setItem(\"jwtToken\", token);\n        // set our token in header ***\n        setJWTToken(token);\n        // decode token on React\n        const decoded = jwt_decode(token);\n        // dispatch to our securityReducer\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: decoded\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n    });\n};","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n    logout() {\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n    render() {\n        const { validToken, user } = this.props.security;\n\n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            Dashboard\n                        </Link>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            <i className=\"fas fa-user-circle mr-1\" />\n                            {user.fullName}\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            to=\"/logout\"\n                            onClick={this.logout.bind(this)}\n                        >\n                            Logout\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/register\">\n                            Sign Up\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">\n                            Login\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        let headerLinks;\n\n        if (validToken && user) {\n            headerLinks = userIsAuthenticated;\n        } else {\n            headerLinks = userIsNotAuthenticated;\n        }\n\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n                <div className=\"container\">\n                    <Link className=\"navbar-brand\" to=\"/\">\n                        Personal Project Management Tool\n                    </Link>\n                    <button\n                        className=\"navbar-toggler\"\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#mobile-nav\"\n                    >\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    {headerLinks}\n                </div>\n            </nav>\n        );\n    }\n}\n\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(\n    mapStateToProps,\n    { logout }\n)(Header);","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\"\nimport {createProject} from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors:{}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors){\n            this.setState({errors:nextProps.errors});\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n\n        console.log(newProject);\n        this.props.createProject(newProject, this.props.history)\n\n    }\n\n    render() {\n        const {errors}= this.state;\n        return (\n            <div>\n                {\n                    //check name attribute input fields\n                    //create constructor\n                    //set state\n                    //set value on input fields\n                    //create onChange function\n                    //set onChange on each input field\n                    //bind on constructor\n                    //check state change in the react extension\n                }\n               >\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg \", {\"is-invalid\": errors.projectName})}\n                                            placeholder=\"Project Name\"\n                                            name=\"projectName\"\n                                            value={this.state.projectName}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectName && (<div className=\"invalid-feedback\">{errors.projectName}</div>\n\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.projectIdentifier})}\n                                            placeholder=\"Unique Project ID\"\n                                            name=\"projectIdentifier\"\n                                            value={this.state.projectIdentifier}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectIdentifier && (<div className=\"invalid-feedback\">{errors.projectIdentifier}</div>)}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <textarea\n                                            className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.description})}\n                                            placeholder=\"Project Description\"\n                                            name=\"description\"\n                                            value={this.state.description}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.description && (<div className=\"invalid-feedback\">{errors.description}</div>)}\n                                        <p>{errors.description}</p>\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"start_date\"\n                                            value={this.state.start_date}\n                                            onChange={this.onChange}\n                                        />\n                                        <p>{errors.description}</p>\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"end_date\"\n                                            value={this.state.end_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block mt-4\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nAddProject.propTypes = {\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state =>({\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,\n    {createProject}\n    ) (AddProject);","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n    projects: [],\n    project: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            };\n\n        case GET_PROJECT:\n            return {\n                ...state,\n                project: action.payload\n            };\n\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(\n                    project => project.projectIdentifier !== action.payload\n                )\n            };\n        default:\n            return state;\n    }\n}","import {\n    GET_BACKLOG,\n    GET_PROJECT_TASK,\n    DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n    project_tasks: [],\n    project_task: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            };\n\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            };\n\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(\n                    project_task =>project_task.projectSequence!== action.payload\n                )\n            };\n\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n    store = createStore(\n        rootReducer,\n        initalState,\n        compose(\n            applyMiddleware(...middleware),\n            ReactReduxDevTools\n        )\n    );\n} else {\n    store = createStore(\n        rootReducer,\n        initalState,\n        compose(applyMiddleware(...middleware))\n    );\n}\n\nexport default store;","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n    //set state\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        } = nextProps.project;\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        });\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getProject(id, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const updateProject = {\n            id: this.state.id,\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n\n        this.props.createProject(updateProject, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\n                            <hr />\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.projectName\n                                        })}\n                                        placeholder=\"Project Name\"\n                                        name=\"projectName\"\n                                        value={this.state.projectName}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"Unique Project ID\"\n                                        name=\"projectIdentifier\"\n                                        value={this.state.projectIdentifier}\n                                        onChange={this.onChange}\n                                        disabled\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                  <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                          \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      onChange={this.onChange}\n                      value={this.state.description}\n                  />\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\n                                    )}\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"start_date\"\n                                        value={this.state.start_date}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"end_date\"\n                                        value={this.state.end_date}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n\n                                <input\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block mt-4\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    createProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { getProject, createProject }\n)(UpdateProject);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n        return (\n            <div className=\"card mb-1 bg-light\">\n                <div className={`card-header text-primary  ${priorityClass}`}>\n                    ID: {project_task.projectSequence} -- Priority:{priorityString}\n                </div>\n                <div className=\"card-body bg-light\">\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\n                    <p className=\"card-text text-truncate \">\n                        {project_task.acceptanceCriteria}\n                    </p>\n                    <Link\n                        to={`/updateProjectTask/${project_task.projectIdentifier}/${\n                            project_task.projectSequence\n                        }`}\n                        className=\"btn btn-primary\"\n                    >\n                        View / Update\n                    </Link>\n                    <button className=\"btn btn-danger ml-4\"\n                            onClick={this.onDeleteClick.bind(this,\n                                project_task.projectIdentifier,\n                                project_task.projectSequence\n                            )}\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n    render() {\n        const { project_tasks_prop } = this.props;\n\n        const tasks = project_tasks_prop.map(project_task => (\n            <ProjectTask key={project_task.id} project_task={project_task} />\n        ));\n\n        let todoItems = [];\n        let inProgressItems = [];\n        let doneItems = [];\n\n        for (let i = 0; i < tasks.length; i++) {\n\n            if (tasks[i].props.project_task.status === \"TO_DO\") {\n                todoItems.push(tasks[i]);\n            }\n\n            if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n                inProgressItems.push(tasks[i]);\n            }\n\n            if (tasks[i].props.project_task.status === \"DONE\") {\n                doneItems.push(tasks[i]);\n            }\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-secondary text-white\">\n                                <h3>TO DO</h3>\n                            </div>\n                        </div>\n                        {todoItems}\n                        {\n                            // insert tasks here\n                        }\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-primary text-white\">\n                                <h3>In Progress</h3>\n                            </div>\n                        </div>\n                        {inProgressItems}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-success text-white\">\n                                <h3>Done</h3>\n                            </div>\n                        </div>\n                        {doneItems}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Backlog;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        //PROJECT IDENTIFIER BUG\n        if (errors.projectNotFound) {\n          return (\n              <div className=\"alert alert-danger text-center\" role=\"alert\">\n                {errors.projectNotFound}\n              </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n              <div className=\"alert alert-danger text-center\" role=\"alert\">\n                {errors.projectIdentifier}\n              </div>\n          );\n        } else {\n          return (\n              <div className=\"alert alert-info text-center\" role=\"alert\">\n                No Project Tasks on this board\n              </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n        <div className=\"container\">\n          <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n            <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n          </Link>\n          <br />\n          <hr />\n          {BoardContent}\n        </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { getBacklog }\n)(ProjectBoard);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n    constructor(props) {\n        super(props);\n        const { id } = this.props.match.params;\n\n        this.state = {\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: id,\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    // on change\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    //on submit\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newTask = {\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate\n        };\n        this.props.addProjectTask(\n            this.state.projectIdentifier,\n            newTask,\n            this.props.history\n        );\n    }\n\n    render() {\n        const { id } = this.props.match.params;\n        const { errors } = this.state;\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.summary\n                                        })}\n                                        name=\"summary\"\n                                        placeholder=\"Project Task summary\"\n                                        value={this.state.summary}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.summary && (\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                  <textarea\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Acceptance Criteria\"\n                      name=\"acceptanceCriteria\"\n                      value={this.state.acceptanceCriteria}\n                      onChange={this.onChange}\n                  />\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"dueDate\"\n                                        value={this.state.dueDate}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control form-control-lg\"\n                                        name=\"priority\"\n                                        value={this.state.priority}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control form-control-lg\"\n                                        name=\"status\"\n                                        value={this.state.status}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block mt-4\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddProjectTask.propTypes = {\n    addProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { addProjectTask }\n)(AddProjectTask);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n    getProjectTask,\n    updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: \"\",\n            dueDate: \"\",\n            projectIdentifier: \"\",\n            create_At: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        const { backlog_id, pt_id } = this.props.match.params;\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n\n        const {\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            create_At\n        } = nextProps.project_task;\n\n        this.setState({\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            create_At\n        });\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const UpdateProjectTask = {\n            id: this.state.id,\n            projectSequence: this.state.projectSequence,\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n            projectIdentifier: this.state.projectIdentifier,\n            create_At: this.state.create_At\n        };\n\n        // console.log(UpdateProjectTask);\n        this.props.updateProjectTask(\n            this.state.projectIdentifier,\n            this.state.projectSequence,\n            UpdateProjectTask,\n            this.props.history\n        );\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link\n                                to={`/projectBoard/${this.state.projectIdentifier}`}\n                                className=\"btn btn-light\"\n                            >\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\n                            <p className=\"lead text-center\">\n                                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                                {this.state.projectSequence}{\" \"}\n                            </p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.summary\n                                        })}\n                                        name=\"summary\"\n                                        placeholder=\"Project Task summary\"\n                                        value={this.state.summary}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.summary && (\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                  <textarea\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Acceptance Criteria\"\n                      name=\"acceptanceCriteria\"\n                      value={this.state.acceptanceCriteria}\n                      onChange={this.onChange}\n                  />\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"dueDate\"\n                                        value={this.state.dueDate}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control form-control-lg\"\n                                        name=\"priority\"\n                                        value={this.state.priority}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control form-control-lg\"\n                                        name=\"status\"\n                                        value={this.state.status}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block mt-4\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    updateProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes  from  \"prop-types\";\n\nclass Landing extends Component {\n\n    componentDidMount() {\n        if(this.props.security.validToken){\n            this.props.history.push(\"/Dashboard\")\n        }\n    }\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\n                                <p className=\"lead\">\n                                    Create your account to join active projects or start you own\n                                </p>\n                                <hr />\n                                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                                    Sign Up\n                                </Link>\n                                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                                    Login\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\nLanding.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapSateToProps = state =>({\n   security: state.security\n});\n\nexport default connect(mapSateToProps)(Landing);","import React, {Component} from 'react';\nimport { createNewUser} from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor(){\n        super();\n        this.state={\n            username: \"\",\n            fullName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors:{}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    componentDidMount() {\n        if(this.props.security.validToken){\n            this.props.history.push(\"/Dashboard\")\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors){\n            this.setState({errors: nextProps.errors});\n        }\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            fullName: this.state.fullName,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        }\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    onChange(e){\n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    render() {\n        const {errors} =  this.state;\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\"\n                                           className={classnames(\"form-control form-control-lg\", {\n                                               \"is-invalid\": errors.fullName\n                                           })}\n                                           placeholder=\"Full Name\"\n                                           name=\"fullName\"\n                                           value={this.state.fullName}\n                                           onChange={this.onChange}\n                                    />\n                                    {\n                                        errors.fullName && (\n                                            <div className=\"invalid-feedback\">{errors.fullName}</div>\n                                        )\n                                    }\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address (Username)\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {\n                                        errors.username && (\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\n                                        )\n                                    }\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\",{\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {\n                                        errors.password && (\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\n                                        )\n                                    }\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.confirmPassword\n                                        })}\n                                        placeholder=\"Confirm Password\"\n                                        name=\"confirmPassword\"\n                                        value={this.state.confirmPassword}\n                                        onChange={this.onChange}\n                                    />\n                                    {\n                                        errors.confirmPassword && (\n                                            <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\n\n                                        )\n                                    }\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\"/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nRegister.prototypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n}\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    security: state.security\n});\n\nexport default connect(mapStateToProps,{createNewUser})(Register);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if(this.props.security.validToken){\n            this.props.history.push(\"/Dashboard\")\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const LoginRequest = {\n            username: this.state.username,\n            password: this.state.password\n        };\n\n        this.props.login(LoginRequest);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { login }\n)(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n    <Route\n        {...otherProps}\n        render={props =>\n            security.validToken === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nSecuredRoute.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n    setJWTToken(jwtToken);\n    const decoded_jwtToken = jwt_decode(jwtToken);\n    store.dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded_jwtToken\n    });\n\n    const currentTime = Date.now() / 1000;\n    if (decoded_jwtToken.exp < currentTime) {\n        store.dispatch(logout());\n        window.location.href = \"/\";\n    }\n}\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div className=\"App\">\n                        <Header />\n                        {\n                            //Public Routes\n                        }\n\n                        <Route exact path=\"/\" component={Landing} />\n                        <Route exact path=\"/register\" component={Register} />\n                        <Route exact path=\"/login\" component={Login} />\n\n                        {\n                            //Private Routes\n                        }\n                        <Switch>\n                            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n                            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n                            <SecuredRoute\n                                exact\n                                path=\"/updateProject/:id\"\n                                component={UpdateProject}\n                            />\n                            <SecuredRoute\n                                exact\n                                path=\"/projectBoard/:id\"\n                                component={ProjectBoard}\n                            />\n                            <SecuredRoute\n                                exact\n                                path=\"/addProjectTask/:id\"\n                                component={AddProjectTask}\n                            />\n                            <SecuredRoute\n                                exact\n                                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                                component={UpdateProjectTask}\n                            />\n                        </Switch>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}